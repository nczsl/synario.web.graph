import * as types_mod from './types';
export declare function guid(): string;
export declare const ansi: string;
export declare const space: string;
export declare const wrap: string;
export declare const tab: string;
export declare function quickSort(arr: number[], begin: number, end: number): Array<number>;
export declare function InsertSort(arr: number[], ascendingDescending?: boolean): void;
export declare function InsertOrder<T>(arr: T[], compare: (t: T) => number, ascendingDescending?: boolean): void;
export declare function consoleWarn(msg: string): void;
export declare function consoleError(msg: string): void;
export declare function consoleSuccess(msg: string): void;
export declare function consoleInfo(msg: string, color: types_mod.AnsiColor, style?: types_mod.AnsiStyle, background?: types_mod.AnsiBackground): void;
export declare function consoleLink(title: string, url: string): void;
export declare function consoleDebug(...objs: any[]): void;
export declare function consoleDebugKv(...objs: any[]): void;
export declare function isValidUrl(str: string): boolean;
export declare function clone<T>(obj: T): T;
export declare function color2rgba(color: string): {
    r: number;
    g: number;
    b: number;
    a: number;
};
export declare function nextStringMark(no: number): string;
export declare function No2Str(no: number): string;
export declare function Round(value: number, significant?: number): number;
export declare function GetMonthDay(year: number, month: number): [number, number];
export declare function Array1To2<T>(num: number, arr: Array<T>): T[][];
export type EventName = 'onitems' | 'oncontent';
export declare function dataBinding(ele: Element, bindEvent: EventName, data: any): CustomEvent<any>;
export declare function dataBindings(eles: Element[], bindEvent: EventName, data: any): CustomEvent<any>;
export declare let tempData: types_mod.Dic<any>;
export declare function clearTemp(): void;
export declare function getNow(): string;
export declare function removeElement(ele: HTMLElement): void;
export declare function checkGrid(): boolean;
export declare function splitBigInt(num: number): [number, number];
export declare function mergeBigInt(high: number, low: number): number;
export declare function sleep(ms: number): Promise<unknown>;
export declare const keyCodeMap: {
    [key: string]: number;
};
export declare function keyCode2Uint8(code: string): number;
