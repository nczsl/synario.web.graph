import * as types_mod from './types';
export declare class Netcon {
    mime: types_mod.Mime;
    constructor();
    private toHeaders;
    private toFetchBody;
    private toBuffer;
    private toBlob;
    private toSearch;
    private toForm;
    private setContentType;
    private request;
    getByTextAsync(uri: string, data?: any, jwtToken?: string): Promise<string>;
    getByJsonAsync<T>(uri: string, data?: any, jwtToken?: string): Promise<T>;
    getByBufferAsync(uri: string, data?: any, jwtToken?: string): Promise<ArrayBuffer>;
    getByBlobAsync(uri: string, data?: any, jwtToken?: string): Promise<Blob>;
    postByTextAsync(uri: string, data: string, jwtToken?: string): Promise<Response>;
    postByFormAsync<T extends FormData | HTMLFormElement | Object>(uri: string, data: T, jwtToken?: string): Promise<Response>;
    postByJsonAsync<T>(uri: string, data: T, jwtToken?: string): Promise<Response>;
    postByBufferAsync(uri: string, data: ArrayBuffer | Uint8Array | DataView, jwtToken?: string): Promise<Response>;
    postByBlobAsync(uri: string, data: any, jwtToken?: string): Promise<Response>;
    getBrowerInfo(): {
        n: string;
        v: string;
    };
    private initmime;
    openWebSocket(config: types_mod.WebSocketConfig): WebSocket;
}
